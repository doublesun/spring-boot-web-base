<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ywrain.mapper.ActionPointMapper">
  <resultMap id="BaseResultMap" type="com.ywrain.entity.ActionPoint">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="clientType" jdbcType="INTEGER" property="clientType" />
    <result column="cverStart" jdbcType="BIGINT" property="cverStart" />
    <result column="cverEnd" jdbcType="BIGINT" property="cverEnd" />
    <result column="pageCode" jdbcType="VARCHAR" property="pageCode" />
    <result column="page" jdbcType="VARCHAR" property="page" />
    <result column="view" jdbcType="VARCHAR" property="view" />
    <result column="eventId" jdbcType="VARCHAR" property="eventId" />
    <result column="eventRemark" jdbcType="VARCHAR" property="eventRemark" />
    <result column="eventType" jdbcType="INTEGER" property="eventType" />
    <result column="pointType" jdbcType="INTEGER" property="pointType" />
    <result column="del" jdbcType="INTEGER" property="del" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, clientType, cverStart, cverEnd, pageCode, page, view, eventId, eventRemark, eventType, 
    pointType, del, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.ywrain.entity.ActionPointExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from action_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from action_point
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from action_point
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ywrain.entity.ActionPointExample">
    delete from action_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ywrain.entity.ActionPoint">
    insert into action_point (id, clientType, cverStart, 
      cverEnd, pageCode, page, 
      view, eventId, eventRemark, 
      eventType, pointType, del, 
      createTime, updateTime)
    values (#{id,jdbcType=BIGINT}, #{clientType,jdbcType=INTEGER}, #{cverStart,jdbcType=BIGINT}, 
      #{cverEnd,jdbcType=BIGINT}, #{pageCode,jdbcType=VARCHAR}, #{page,jdbcType=VARCHAR}, 
      #{view,jdbcType=VARCHAR}, #{eventId,jdbcType=VARCHAR}, #{eventRemark,jdbcType=VARCHAR}, 
      #{eventType,jdbcType=INTEGER}, #{pointType,jdbcType=INTEGER}, #{del,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ywrain.entity.ActionPoint">
    insert into action_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientType != null">
        clientType,
      </if>
      <if test="cverStart != null">
        cverStart,
      </if>
      <if test="cverEnd != null">
        cverEnd,
      </if>
      <if test="pageCode != null">
        pageCode,
      </if>
      <if test="page != null">
        page,
      </if>
      <if test="view != null">
        view,
      </if>
      <if test="eventId != null">
        eventId,
      </if>
      <if test="eventRemark != null">
        eventRemark,
      </if>
      <if test="eventType != null">
        eventType,
      </if>
      <if test="pointType != null">
        pointType,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clientType != null">
        #{clientType,jdbcType=INTEGER},
      </if>
      <if test="cverStart != null">
        #{cverStart,jdbcType=BIGINT},
      </if>
      <if test="cverEnd != null">
        #{cverEnd,jdbcType=BIGINT},
      </if>
      <if test="pageCode != null">
        #{pageCode,jdbcType=VARCHAR},
      </if>
      <if test="page != null">
        #{page,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        #{view,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="eventRemark != null">
        #{eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="pointType != null">
        #{pointType,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ywrain.entity.ActionPointExample" resultType="java.lang.Long">
    select count(*) from action_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update action_point
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.clientType != null">
        clientType = #{record.clientType,jdbcType=INTEGER},
      </if>
      <if test="record.cverStart != null">
        cverStart = #{record.cverStart,jdbcType=BIGINT},
      </if>
      <if test="record.cverEnd != null">
        cverEnd = #{record.cverEnd,jdbcType=BIGINT},
      </if>
      <if test="record.pageCode != null">
        pageCode = #{record.pageCode,jdbcType=VARCHAR},
      </if>
      <if test="record.page != null">
        page = #{record.page,jdbcType=VARCHAR},
      </if>
      <if test="record.view != null">
        view = #{record.view,jdbcType=VARCHAR},
      </if>
      <if test="record.eventId != null">
        eventId = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="record.eventRemark != null">
        eventRemark = #{record.eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.eventType != null">
        eventType = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.pointType != null">
        pointType = #{record.pointType,jdbcType=INTEGER},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update action_point
    set id = #{record.id,jdbcType=BIGINT},
      clientType = #{record.clientType,jdbcType=INTEGER},
      cverStart = #{record.cverStart,jdbcType=BIGINT},
      cverEnd = #{record.cverEnd,jdbcType=BIGINT},
      pageCode = #{record.pageCode,jdbcType=VARCHAR},
      page = #{record.page,jdbcType=VARCHAR},
      view = #{record.view,jdbcType=VARCHAR},
      eventId = #{record.eventId,jdbcType=VARCHAR},
      eventRemark = #{record.eventRemark,jdbcType=VARCHAR},
      eventType = #{record.eventType,jdbcType=INTEGER},
      pointType = #{record.pointType,jdbcType=INTEGER},
      del = #{record.del,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ywrain.entity.ActionPoint">
    update action_point
    <set>
      <if test="clientType != null">
        clientType = #{clientType,jdbcType=INTEGER},
      </if>
      <if test="cverStart != null">
        cverStart = #{cverStart,jdbcType=BIGINT},
      </if>
      <if test="cverEnd != null">
        cverEnd = #{cverEnd,jdbcType=BIGINT},
      </if>
      <if test="pageCode != null">
        pageCode = #{pageCode,jdbcType=VARCHAR},
      </if>
      <if test="page != null">
        page = #{page,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        view = #{view,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        eventId = #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="eventRemark != null">
        eventRemark = #{eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        eventType = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="pointType != null">
        pointType = #{pointType,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ywrain.entity.ActionPoint">
    update action_point
    set clientType = #{clientType,jdbcType=INTEGER},
      cverStart = #{cverStart,jdbcType=BIGINT},
      cverEnd = #{cverEnd,jdbcType=BIGINT},
      pageCode = #{pageCode,jdbcType=VARCHAR},
      page = #{page,jdbcType=VARCHAR},
      view = #{view,jdbcType=VARCHAR},
      eventId = #{eventId,jdbcType=VARCHAR},
      eventRemark = #{eventRemark,jdbcType=VARCHAR},
      eventType = #{eventType,jdbcType=INTEGER},
      pointType = #{pointType,jdbcType=INTEGER},
      del = #{del,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.ywrain.entity.ActionPointExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from action_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insertBatch">
    insert into action_point (id, clientType, cverStart, cverEnd, pageCode, page, view, eventId, eventRemark, eventType, pointType, del) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.clientType,jdbcType=INTEGER}, #{item.cverStart,jdbcType=BIGINT}, #{item.cverEnd,jdbcType=BIGINT}, #{item.pageCode,jdbcType=VARCHAR}, #{item.page,jdbcType=VARCHAR}, #{item.view,jdbcType=VARCHAR}, #{item.eventId,jdbcType=VARCHAR}, #{item.eventRemark,jdbcType=VARCHAR}, #{item.eventType,jdbcType=INTEGER}, #{item.pointType,jdbcType=INTEGER}, #{item.del,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchOrUpdate">
    insert into action_point (id, clientType, cverStart, cverEnd, pageCode, page, view, eventId, eventRemark, eventType, pointType, del) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.clientType,jdbcType=INTEGER}, #{item.cverStart,jdbcType=BIGINT}, #{item.cverEnd,jdbcType=BIGINT}, #{item.pageCode,jdbcType=VARCHAR}, #{item.page,jdbcType=VARCHAR}, #{item.view,jdbcType=VARCHAR}, #{item.eventId,jdbcType=VARCHAR}, #{item.eventRemark,jdbcType=VARCHAR}, #{item.eventType,jdbcType=INTEGER}, #{item.pointType,jdbcType=INTEGER}, #{item.del,jdbcType=INTEGER})
    </foreach>
     on duplicate key update id=values(id), clientType=values(clientType), cverStart=values(cverStart), cverEnd=values(cverEnd), pageCode=values(pageCode), page=values(page), view=values(view), eventId=values(eventId), eventRemark=values(eventRemark), eventType=values(eventType), pointType=values(pointType), del=values(del)
  </insert>
  <insert id="insertBatchOrUpdateExclusionColumn">
    insert into action_point <trim prefix=" (" suffix=")" suffixOverrides=","><if test="!exclusionColumns.contains('id')">id,</if>
      <if test="!exclusionColumns.contains('clientType')">clientType,</if><if test="!exclusionColumns.contains('cverStart')">cverStart,</if>
      <if test="!exclusionColumns.contains('cverEnd')">cverEnd,</if><if test="!exclusionColumns.contains('pageCode')">pageCode,</if>
      <if test="!exclusionColumns.contains('page')">page,</if><if test="!exclusionColumns.contains('view')">view,</if>
      <if test="!exclusionColumns.contains('eventId')">eventId,</if><if test="!exclusionColumns.contains('eventRemark')">eventRemark,</if>
      <if test="!exclusionColumns.contains('eventType')">eventType,</if><if test="!exclusionColumns.contains('pointType')">pointType,</if>
      <if test="!exclusionColumns.contains('del')">del,</if><if test="!exclusionColumns.contains('createTime')">createTime,</if>
      <if test="!exclusionColumns.contains('updateTime')">updateTime,</if></trim> values 
    <foreach collection="list" index="index" item="item" separator=",">
       <trim prefix=" (" suffix=")" suffixOverrides=","><if test="!exclusionColumns.contains('id')">#{item.id,jdbcType=BIGINT},</if>
        <if test="!exclusionColumns.contains('clientType')">#{item.clientType,jdbcType=INTEGER},</if>
        <if test="!exclusionColumns.contains('cverStart')">#{item.cverStart,jdbcType=BIGINT},</if>
        <if test="!exclusionColumns.contains('cverEnd')">#{item.cverEnd,jdbcType=BIGINT},</if>
        <if test="!exclusionColumns.contains('pageCode')">#{item.pageCode,jdbcType=VARCHAR},</if>
        <if test="!exclusionColumns.contains('page')">#{item.page,jdbcType=VARCHAR},</if>
        <if test="!exclusionColumns.contains('view')">#{item.view,jdbcType=VARCHAR},</if>
        <if test="!exclusionColumns.contains('eventId')">#{item.eventId,jdbcType=VARCHAR},</if>
        <if test="!exclusionColumns.contains('eventRemark')">#{item.eventRemark,jdbcType=VARCHAR},</if>
        <if test="!exclusionColumns.contains('eventType')">#{item.eventType,jdbcType=INTEGER},</if>
        <if test="!exclusionColumns.contains('pointType')">#{item.pointType,jdbcType=INTEGER},</if>
        <if test="!exclusionColumns.contains('del')">#{item.del,jdbcType=INTEGER},</if>
        <if test="!exclusionColumns.contains('createTime')">#{item.createTime,jdbcType=TIMESTAMP},</if>
        <if test="!exclusionColumns.contains('updateTime')">#{item.updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </foreach>
     on duplicate key update <trim suffixOverrides=","><if test="!exclusionColumns.contains('id')">id=values(id),</if>
      <if test="!exclusionColumns.contains('clientType')">clientType=values(clientType),</if>
      <if test="!exclusionColumns.contains('cverStart')">cverStart=values(cverStart),</if>
      <if test="!exclusionColumns.contains('cverEnd')">cverEnd=values(cverEnd),</if><if test="!exclusionColumns.contains('pageCode')">pageCode=values(pageCode),</if>
      <if test="!exclusionColumns.contains('page')">page=values(page),</if><if test="!exclusionColumns.contains('view')">view=values(view),</if>
      <if test="!exclusionColumns.contains('eventId')">eventId=values(eventId),</if><if test="!exclusionColumns.contains('eventRemark')">eventRemark=values(eventRemark),</if>
      <if test="!exclusionColumns.contains('eventType')">eventType=values(eventType),</if>
      <if test="!exclusionColumns.contains('pointType')">pointType=values(pointType),</if>
      <if test="!exclusionColumns.contains('del')">del=values(del),</if><if test="!exclusionColumns.contains('createTime')">createTime=values(createTime),</if>
      <if test="!exclusionColumns.contains('updateTime')">updateTime=values(updateTime),</if>
    </trim>
  </insert>
  <select id="limitColumnsSelectByExample" parameterType="map" resultMap="BaseResultMap">
    select 
    <foreach collection="limitColumns" item="item" separator=",">
      ${item}
    </foreach>
    from action_point
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="limitColumnsSelectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <foreach collection="limitColumns" item="item" separator=",">
      ${item}
    </foreach>
    from action_point
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="limitColumnsUpdateByExample" parameterType="map">
    update action_point
    <set>
      <if test="limitColumns.contains('id')">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="limitColumns.contains('clientType')">
        clientType = #{record.clientType,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('cverStart')">
        cverStart = #{record.cverStart,jdbcType=BIGINT},
      </if>
      <if test="limitColumns.contains('cverEnd')">
        cverEnd = #{record.cverEnd,jdbcType=BIGINT},
      </if>
      <if test="limitColumns.contains('pageCode')">
        pageCode = #{record.pageCode,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('page')">
        page = #{record.page,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('view')">
        view = #{record.view,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('eventId')">
        eventId = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('eventRemark')">
        eventRemark = #{record.eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('eventType')">
        eventType = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('pointType')">
        pointType = #{record.pointType,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('del')">
        del = #{record.del,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('createTime')">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="limitColumns.contains('updateTime')">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="limitColumnsUpdateByExampleSelective" parameterType="map">
    update action_point
    <set>
      <if test="record.id != null and limitColumns.contains('id')">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.clientType != null and limitColumns.contains('clientType')">
        clientType = #{record.clientType,jdbcType=INTEGER},
      </if>
      <if test="record.cverStart != null and limitColumns.contains('cverStart')">
        cverStart = #{record.cverStart,jdbcType=BIGINT},
      </if>
      <if test="record.cverEnd != null and limitColumns.contains('cverEnd')">
        cverEnd = #{record.cverEnd,jdbcType=BIGINT},
      </if>
      <if test="record.pageCode != null and limitColumns.contains('pageCode')">
        pageCode = #{record.pageCode,jdbcType=VARCHAR},
      </if>
      <if test="record.page != null and limitColumns.contains('page')">
        page = #{record.page,jdbcType=VARCHAR},
      </if>
      <if test="record.view != null and limitColumns.contains('view')">
        view = #{record.view,jdbcType=VARCHAR},
      </if>
      <if test="record.eventId != null and limitColumns.contains('eventId')">
        eventId = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="record.eventRemark != null and limitColumns.contains('eventRemark')">
        eventRemark = #{record.eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.eventType != null and limitColumns.contains('eventType')">
        eventType = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.pointType != null and limitColumns.contains('pointType')">
        pointType = #{record.pointType,jdbcType=INTEGER},
      </if>
      <if test="record.del != null and limitColumns.contains('del')">
        del = #{record.del,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null and limitColumns.contains('createTime')">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null and limitColumns.contains('updateTime')">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="limitColumnsUpdateByPrimaryKey" parameterType="map">
    update action_point
    <set>
      <if test="limitColumns.contains('id')">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="limitColumns.contains('clientType')">
        clientType = #{record.clientType,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('cverStart')">
        cverStart = #{record.cverStart,jdbcType=BIGINT},
      </if>
      <if test="limitColumns.contains('cverEnd')">
        cverEnd = #{record.cverEnd,jdbcType=BIGINT},
      </if>
      <if test="limitColumns.contains('pageCode')">
        pageCode = #{record.pageCode,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('page')">
        page = #{record.page,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('view')">
        view = #{record.view,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('eventId')">
        eventId = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('eventRemark')">
        eventRemark = #{record.eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="limitColumns.contains('eventType')">
        eventType = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('pointType')">
        pointType = #{record.pointType,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('del')">
        del = #{record.del,jdbcType=INTEGER},
      </if>
      <if test="limitColumns.contains('createTime')">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="limitColumns.contains('updateTime')">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="limitColumnsUpdateByPrimaryKeySelective" parameterType="map">
    update action_point
    <set>
      <if test="record.id != null and limitColumns.contains('id')">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.clientType != null and limitColumns.contains('clientType')">
        clientType = #{record.clientType,jdbcType=INTEGER},
      </if>
      <if test="record.cverStart != null and limitColumns.contains('cverStart')">
        cverStart = #{record.cverStart,jdbcType=BIGINT},
      </if>
      <if test="record.cverEnd != null and limitColumns.contains('cverEnd')">
        cverEnd = #{record.cverEnd,jdbcType=BIGINT},
      </if>
      <if test="record.pageCode != null and limitColumns.contains('pageCode')">
        pageCode = #{record.pageCode,jdbcType=VARCHAR},
      </if>
      <if test="record.page != null and limitColumns.contains('page')">
        page = #{record.page,jdbcType=VARCHAR},
      </if>
      <if test="record.view != null and limitColumns.contains('view')">
        view = #{record.view,jdbcType=VARCHAR},
      </if>
      <if test="record.eventId != null and limitColumns.contains('eventId')">
        eventId = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="record.eventRemark != null and limitColumns.contains('eventRemark')">
        eventRemark = #{record.eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.eventType != null and limitColumns.contains('eventType')">
        eventType = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.pointType != null and limitColumns.contains('pointType')">
        pointType = #{record.pointType,jdbcType=INTEGER},
      </if>
      <if test="record.del != null and limitColumns.contains('del')">
        del = #{record.del,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null and limitColumns.contains('createTime')">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null and limitColumns.contains('updateTime')">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
</mapper>